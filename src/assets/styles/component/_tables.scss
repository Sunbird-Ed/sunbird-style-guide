.sb-table-container {

  margin-top: $base-block-space*2;
  margin-bottom: $base-block-space*2;

  .sb-table-search-header {
    width: 100%;
    height: $base-block-space*8;
    padding: $block-padding-xy;
    display: flex;
    align-items: center;

    &.search-header-withbg {
      background: $gray-0;
      border: 1px solid $gray-100;
      border-bottom: none;
      border-radius: 4px 4px 0 0;
    }

    .download-file {
      font-size: $font-size-sm;
      color: $blue;
      margin-left: auto;
      cursor: pointer;
    }
  }
}

.sb-table {
  width: 100%;
  background: $white-color;
  border: 1px solid $gray-100;
  border-bottom: none;
  box-shadow: none;
  border-radius: 4px 4px 0 0;
  text-align: left;
  color: $gray;
  border-collapse: separate;
  border-spacing: 0;
}

.sb-table-fixed {
  table-layout: fixed;
}

.sb-table-hover {
  tr:hover {
    background: $gray-0 !important;
    color: rgba($gray-0, .95) !important;
  }
}

.sb-table-striped tbody tr:nth-child(2n) {
  background-color: rgba($gray, .1);
}

.sb-table-sortable {
  tr th::before, tr th::after {
    border: 4px solid transparent;
    content: "";
    height: 0;
    right: $base-block-space*2;
    top: 50%;
    position: absolute;
    width: 0;
    border-bottom-color: $primary-300;
    cursor: pointer;
  }

  tr th::before {
    margin-top: -($base-block-space);
  }

  tr th::after {
    margin-top: 2px;
    transform: rotate(180deg);
    -webkit-transform: rotate(180deg);
  }
}

[class*="sb-table-singleline"] {
  white-space: nowrap;
}

.sb-table .sb-table-header, .sb-table .sb-table-body {
  tr th {
    font-size: $font-size-sm;
    color: $gray;
    padding: $block-padding-y-x;
    background-color: rgba($gray-0, 0.6);
    position: relative;
    height: $base-block-space*5;
    border-bottom: 1px solid $gray-100;
  }

  &.heading-large {
    tr th {
      padding: ($base-block-space * 2) ($base-block-space * 3);
    }
  }
}

.sb-table .sb-table-body {

  td {
    font-size: $font-size-normal;
    padding: $block-padding-xy;
    color: $gray;
    height: $base-block-space*7;
    border-bottom: 1px solid $gray-100;
  }

  &.body-large {
    td {
      height: $base-block-space*8;
      padding: ($base-block-space * 2) ($base-block-space * 3);
    }
  }

  .sb-table-active,
  .sb-table-success,
  .sb-table-warning,
  .sb-table-danger {
    font-weight: $font-weight-bold;
  }
  
  .sb-table-active {
    background: $primary-0;
    .sb-media .media-heading {
      font-weight: $font-weight-bold;
    }
  }

  .sb-table-success {
    background: $secondary-0;
  }

  .sb-table-warning {
    background: $tertiary-0;
  }

  .sb-table-danger {
    background: $red-0;
  }

}

.sb-table .sb-media {
  display: flex;
  align-items: flex-start;

  .sb-media-object {
    width: $base-block-space*4;
    height: $base-block-space*4;
    background: $gray-0;
    margin-top: auto;
    margin-bottom: auto;
    margin-right: $base-block-space*2;
  }

  .media-heading {
    margin: 0 auto;
    font-weight: $font-weight-normal;
  }

  .media-description {
    font-size: $font-size-sm;
    color: $gray-200;
  }
}

.sb-table {
  &.sb-table-placeholder {
    .sb-media-obj-placeholder {
      display: flex;
      align-items: center;

      .image {
        width: $base-block-space*4;
        height: $base-block-space*4;
        background: $gray-0;
        margin-top: auto;
        margin-bottom: auto;
        margin-right: $base-block-space*2;
      }
      .text {
        background: $gray-0;
        height: 8px;
        width: 100px;
      }
    }
    
    .bar {
      width: $base-block-space*15;
      height: $base-block-space;
      background: $gray-0;
    }

    .loading {
      position: relative;
      overflow: hidden;
      &::after {
        content: '';
        display: block;
        background-color: #a8a8a8;
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        transform: translateX(0);
        animation: 1s loading-placeholder ease-in-out infinite;
      }
    }

    @keyframes loading-placeholder {
      0% {
        transform: translateX(-100%);
      }
      100% {
        transform: translateX(100%);
      }
    }

  }
}